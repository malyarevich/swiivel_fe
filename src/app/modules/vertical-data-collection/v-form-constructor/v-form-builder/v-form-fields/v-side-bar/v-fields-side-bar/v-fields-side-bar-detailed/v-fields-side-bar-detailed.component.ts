import {Component, Input, OnInit} from '@angular/core';
import {Field} from "../../../../../../model/field.model";
import {crumbs} from "../index";
import {SideBarService} from "../../side-bar.service";
import {Form} from "../../../../../../model/form.model";
import {v4 as uuid} from 'uuid';
import {cloneDeep, isEmpty} from 'lodash';
@Component({
  selector: 'app-v-fields-side-bar-detailed',
  templateUrl: './v-fields-side-bar-detailed.component.html',
  styleUrls: ['./v-fields-side-bar-detailed.component.css']
})
export class VFieldsSideBarDetailedComponent implements OnInit {

  @Input() section: Field;
  @Input() form: Form;
  showNested: boolean  = true;
  //TODO:remake static "crumps" to autogenerated
  crumbs = crumbs;

  constructor(private sideBarService: SideBarService) {
    // this.section.exist = false;
  }

  ngOnInit() {
    // console.log(this.form);
  }

  returnToTree(){
    this.sideBarService.sectionSubject.next({});
  }

  // onDelete(section: Field) {
  //
  //   this.form.fields =  this.form.fields.filter(sec=>sec.name!=section.name);
  //   // this.fields = this.findAndDelete(name, this.fields);
  //   // this.fields.map(group => group.type == 113 ? group.fields = this.findAndDelete(name, group.fields) : group);
  //   this.sideBarService.changeExistingAllSection(false, this.section.fields);
  //
  //   // this.fieldsValidator();
  // }
  onBeingChange(event){

   if(event){
     this.sideBarService.addExistingField(
       this.section,
       this.form.fields,
     );
     this.sideBarService.changeExistingAllSection(true, this.section.fields);
   }else{
     this.sideBarService.onDelete(
       this.section,
       this.form,
     );
     this.sideBarService.changeExistingAllSection(false, this.section.fields)

   }

  }

  // changeExistingAllSection(event, fieldList: Field[]){
  //   fieldList.forEach(field=>{
  //     if(field.type==113) this.changeExistingAllSection(event, field.fields) ;
  //     field.exist = event;
  //   })
  // }


  initFormFieldsToSideBar(sideBar: Field[], workArea: Field[]) {
    sideBar.forEach(sideBarField => {
      workArea.forEach(field => {
        if (sideBarField.name == field.name) {
          if (field.type == 113) this.initFormFieldsToSideBar(sideBarField.fields, field.fields);
          sideBarField.exist = true
        }
      })
    })
  }


}
